@using Weblitz.Shop.Web.Models.View
@model Weblitz.Shop.Web.Models.View.IListable<ProductSummary>

<div class="navbar">
    <div class="navbar-inner">
        <ul class="nav">
            @if (Model.SortOptions.Count > 0)
            {
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                        Sort <b class="caret"></b>
                    </a>
                    <ul class="dropdown-menu">
                        @foreach (var x in Model.SortOptions)
                        {
                            <li class="@(x.Key == Model.SortBy ? "active" : string.Empty)">
                                <a href="@Url.Action(Model.PageLink.ActionName, Model.PageLink.ControllerName, 
                                                     new RouteValueDictionary(Model.PageLink.RouteValues)
                                                         {
                                                             {"page", Model.CurrentPage}, 
                                                             {"itemsPerPage", Model.ItemsPerPage},
                                                             {"sort", x.Key}
                                                         })">@x.Value</a>
                            </li>
                        }
                    </ul>
                </li>
            }
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                    View <b class="caret"></b>
                </a>
                <ul class="dropdown-menu">
                    <li class="@(Model.ViewMode == ViewMode.Grid ? "active" : string.Empty)">
                        <a href="@Url.Action(Model.PageLink.ActionName, Model.PageLink.ControllerName, 
                                                     new RouteValueDictionary(Model.PageLink.RouteValues)
                                                         {
                                                             {"page", Model.CurrentPage}, 
                                                             {"itemsPerPage", Model.ItemsPerPage},
                                                             {"mode", "grid"}
                                                         })"><i class="icon-th"></i> Grid</a>
                    </li>
                    <li class="@(Model.ViewMode == ViewMode.List ? "active" : string.Empty)">
                        <a href="@Url.Action(Model.PageLink.ActionName, Model.PageLink.ControllerName, 
                                                     new RouteValueDictionary(Model.PageLink.RouteValues)
                                                         {
                                                             {"page", Model.CurrentPage}, 
                                                             {"itemsPerPage", Model.ItemsPerPage},
                                                             {"mode", "list"}
                                                         })"><i class="icon-th-list"></i> List</a>
                    </li>
                </ul>
            </li>
            @if (Model.PerPageOptions.Length > 0)
            {
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                        Page <b class="caret"></b>
                    </a>
                    <ul class="dropdown-menu">
                        @foreach (var x in Model.PerPageOptions)
                        {
                            <li class="@(x == Model.ItemsPerPage ? "active" : string.Empty)">
                                <a href="@Url.Action(Model.PageLink.ActionName, Model.PageLink.ControllerName, 
                                                     new RouteValueDictionary(Model.PageLink.RouteValues)
                                                         {
                                                             {"page", Model.CurrentPage}, 
                                                             {"itemsPerPage", x}
                                                         })">@x</a>
                            </li>
                        }
                    </ul>
                </li>
            }
        </ul>
        @{ Html.RenderPartial("_Pager", Model); }
    </div>
</div>
